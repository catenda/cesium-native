// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/Library.h>
#include <CesiumUtility/ExtensibleObject.h>
#include <CesiumUtility/JsonValue.h>
#include <string>

namespace CesiumGltf {
    /**
     * @brief Object metadata attribute.
     */
    struct CESIUMGLTF_API ExtensionCatendaMetadataObjectMetadataAttribute final : public CesiumUtility::ExtensibleObject {
        static constexpr const char* TypeName = "ExtensionCatendaMetadataObjectMetadataAttribute";

        /**
         * @brief Known values for The type attribute's value.
         */
        struct Type {
            inline static const std::string NUMBER = "NUMBER";

            inline static const std::string BOOLEAN = "BOOLEAN";

            inline static const std::string STRING = "STRING";

            inline static const std::string DATETIME = "DATETIME";

            inline static const std::string URI = "URI";
        };

        /**
         * @brief The type attribute's value.
         * 
         * Known values are defined in {@link Type}.
         *
         */
        std::string type = Type::NUMBER;

        /**
         * @brief The attribute's value.
         */
        CesiumUtility::JsonValue value;

        /**
         * @brief Calculates the size in bytes of this object, including the contents of all collections, pointers, and strings.
         * This will NOT include the size of any extensions attached to the object.
         * Calling this method may be slow as it requires traversing the object's entire structure.
         */
        int64_t getSizeBytes() const {
          int64_t accum = 0;
          accum += int64_t(sizeof(ExtensionCatendaMetadataObjectMetadataAttribute));
          accum += CesiumUtility::ExtensibleObject::getSizeBytes() - int64_t(sizeof(CesiumUtility::ExtensibleObject));

          return accum;
        }

    };
} // namespace CesiumGltf
